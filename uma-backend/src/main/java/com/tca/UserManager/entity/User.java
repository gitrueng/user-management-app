package com.tca.UserManager.entity;

import java.io.Serializable;
import java.sql.Timestamp; // For createdAt and updatedAt
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
// Lombok annotations (ensure Lombok is set up in Eclipse)
// import lombok.Data; // Uncomment if you prefer @Data for getters/setters/toString
// import lombok.NoArgsConstructor; // Uncomment if you prefer @NoArgsConstructor for default constructor
// import lombok.AllArgsConstructor; // Uncomment if you prefer @AllArgsConstructor for all-args constructor

/**
 * The User class represents a user in the system.
 * It is mapped to the "Users" table in the database using JPA annotations.
 */
@Entity // Marks this class as a JPA entity (a table in the database)
@Table(name="\"Users\"") // Maps this entity to the "Users" table (case-sensitive, quoted for PostgreSQL)
// @Data // Uncomment this if you want Lombok to generate getters, setters, toString, equals, hashCode
// @NoArgsConstructor // Uncomment if using @Data and want a no-args constructor
// @AllArgsConstructor // Uncomment if using @Data and want an all-args constructor
public class User implements Serializable {

    // This is used for Java object serialization (not usually changed)
    private static final long serialVersionUID = 1L;

    // Primary key for the Users table, auto-generated by the database
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Uses database identity column for ID generation
    @Column(name="user_id") // Maps to the "user_id" column in the table
    private Integer userId;

    // User's first name, mapped to "first_name" column
    @Column(name="first_name")
    private String firstName;

    // User's last name, mapped to "last_name" column
    @Column(name="last_name")
    private String lastName;

    // User's unique username, mapped to "user_name" column
    @Column(name="user_name", unique = true, nullable = false, length = 50)
    private String username;

    // User's hashed password, mapped to "password" column
    @Column(name="password", nullable = false)
    private String password;

    // User's phone number, mapped to "phone_number" column
    @Column(name="phone_number", unique = true)
    private String phoneNumber;

    // User's email address, mapped to "email" column
    @Column(name="email", unique = true, nullable = false)
    private String email;

    // Whether the user's email is verified, mapped to "email_verified" column
    @Column(name="email_verified")
    private Boolean emailVerified = false; // Default to false

    // User's country code mapped to "country_code" column
    @Column(name="country_code")
    private String countryCode;

    // Timestamp when the user was created, mapped to "created_at" column
    @Column(name="created_at")
    private Timestamp createdAt;

    // Timestamp when the user was last updated, mapped to "updated_at" column
    @Column(name="updated_at")
    private Timestamp updatedAt;

    // Default constructor (required by JPA)
    public User() {
    }

    // --- Getters and Setters for all fields (manually added as Lombok wasn't used in original doc) ---

    public Integer getUserId() {
        return userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Boolean getEmailVerified() {
        return emailVerified;
    }

    public void setEmailVerified(Boolean emailVerified) {
        this.emailVerified = emailVerified;
    }

    public String getCountryCode() {
        return countryCode;
    }

    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    public Timestamp getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

    public Timestamp getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(Timestamp updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public String toString() {
        return "User [userId=" + userId + ", firstName=" + firstName + ", lastName=" + lastName + ", username="
                + username + ", password=" + password + ", phoneNumber=" + phoneNumber + ", email=" + email
                + ", emailVerified=" + emailVerified + ", countryCode=" + countryCode + ", createdAt=" + createdAt
                + ", updatedAt=" + updatedAt + "]";
    }
}
